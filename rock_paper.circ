<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="5" name="LED"/> <!-- LEDs for displaying the scores -->
    <tool lib="5" name="Seven Segment Display"/>
    <tool lib="5" name="Button"> <!-- Button for registering inputs -->
      <a name="text" val="Register"/>
    </tool>
    <tool lib="5" name="Button"> <!-- Button for resetting scores -->
      <a name="text" val="Reset"/>
    </tool>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="1" loc="(160,240)" name="AND Gate"/>
    <comp lib="1" loc="(240,180)" name="XOR Gate"/>
    <comp lib="1" loc="(240,300)" name="XOR Gate"/>
    <comp lib="5" loc="(180,360)" name="Button"> <!-- Button for registering input -->
      <a name="text" val="Register"/>
    </comp>
    <comp lib="5" loc="(180,480)" name="Button"> <!-- Button for resetting scores -->
      <a name="text" val="Reset"/>
    </comp>
    <comp lib="5" loc="(250,300)" name="LED"/> <!-- LED to display Player A's score -->
    <comp lib="5" loc="(250,400)" name="LED"/> <!-- LED to display Player B's score -->
    <comp lib="5" loc="(250,480)" name="Seven Segment Display"/> <!-- 7-segment display for the scores -->
    <comp lib="8" loc="(50,240)" name="Text"> <!-- Text for Player A -->
      <a name="text" val="Player A"/>
    </comp>
    <comp lib="8" loc="(50,120)" name="Text"> <!-- Text for Player B -->
      <a name="text" val="Player B"/>
    </comp>
    <comp lib="8" loc="(180,300)" name="Text"> <!-- Text for "Player A Score" -->
      <a name="text" val="Player A Score"/>
    </comp>
    <comp lib="8" loc="(180,400)" name="Text"> <!-- Text for "Player B Score" -->
      <a name="text" val="Player B Score"/>
    </comp>
    <comp lib="8" loc="(270,300)" name="Text"> <!-- Text for Player A's score value -->
      <a name="text" val="0"/>
    </comp>
    <comp lib="8" loc="(270,400)" name="Text"> <!-- Text for Player B's score value -->
      <a name="text" val="0"/>
    </comp>
    <comp lib="8" loc="(270,480)" name="Text"> <!-- Text for the 7-segment display value -->
      <a name="text" val="00"/>
    </comp>

    <!-- Your existing circuit code goes here -->

  <!-- Define D Flip-Flops for storing scores -->
  <comp lib="4" loc="(300,300)" name="D Flip-Flop">
    <a name="defaultQ" val="false"/>
  </comp>
  <comp lib="4" loc="(300,400)" name="D Flip-Flop">
    <a name="defaultQ" val="false"/>
  </comp>

  <!-- Logic for updating Player A's score -->
  <comp lib="1" loc="(400,300)" name="AND Gate"/>
  <comp lib="1" loc="(450,300)" name="AND Gate"/>
  <comp lib="1" loc="(500,300)" name="OR Gate"/>
  <comp lib="5" loc="(550,300)" name="LED"/>

  <!-- Logic for updating Player B's score -->
  <comp lib="1" loc="(400,400)" name="AND Gate"/>
  <comp lib="1" loc="(450,400)" name="AND Gate"/>
  <comp lib="1" loc="(500,400)" name="OR Gate"/>
  <comp lib="5" loc="(550,400)" name="LED"/>

  <!-- Logic for "Register" button -->
  <comp lib="5" loc="(350,500)" name="Button">
    <a name="text" val="Register"/>
  </comp>

  <!-- Logic for "Reset" button -->
  <comp lib="5" loc="(450,500)" name="Button">
    <a name="text" val="Reset"/>
  </comp>

  <!-- Wiring for score storage and update -->
  <wire from="(Player A's score logic)" to="(D Flip-Flop for Player A's score)">
    <a name="srcPort" val="Q"/>
    <a name="dstPort" val="D"/>
  </wire>
  <wire from="(Player B's score logic)" to="(D Flip-Flop for Player B's score)">
    <a name="srcPort" val="Q"/>
    <a name="dstPort" val="D"/>
  </wire>
  <wire from="(D Flip-Flop for Player A's score)" to="(AND Gate for Player A)">
    <a name="srcPort" val="Q"/>
    <a name="dstPort" val="A"/>
  </wire>
  <wire from="(D Flip-Flop for Player B's score)" to="(AND Gate for Player B)">
    <a name="srcPort" val="Q"/>
    <a name="dstPort" val="A"/>
  </wire>
  <wire from="(AND Gate for Player A)" to="(OR Gate for Player A)">
    <a name="srcPort" val="A"/>
    <a name="dstPort" val="I0"/>
  </wire>
  <wire from="(AND Gate for Player B)" to="(OR Gate for Player B)">
    <a name="srcPort" val="A"/>
    <a name="dstPort" val="I0"/>
  </wire>
  <wire from="(OR Gate for Player A)" to="(LED for Player A)">
    <a name="srcPort" val="I"/>
    <a name="dstPort" val="in"/>
  </wire>
  <wire from="(OR Gate for Player B)" to="(LED for Player B)">
    <a name="srcPort" val="I"/>
    <a name="dstPort" val="in"/>
  </wire>

  <!-- Wiring for buttons -->
  <wire from="(Button for Register logic)" to="(Player A's score logic)">
    <a name="srcPort" val="out"/>
    <a name="dstPort" val="Register input"/>
  </wire>
  <wire from="(Button for Register logic)" to="(Player B's score logic)">
    <a name="srcPort" val="out"/>
    <a name="dstPort" val="Register input"/>
  </wire>
  <wire from="(Button for Reset logic)" to="(D Flip-Flop for Player A's score)">
    <a name="srcPort" val="out"/>
    <a name="dstPort" val="D"/>
  </wire>
  <wire from="(Button for Reset logic)" to="(D Flip-Flop for Player B's score)">
    <a name="srcPort" val="out"/>
    <a name="dstPort" val="D"/>
  </wire>


    <wire from="(180,360)" to="(180,300)"/> <!-- Connect the Register button to Player A's score value -->
    <wire from="(180,480)" to="(180,400)"/> <!-- Connect the Register button to Player B's score value -->
    <wire from="(270,300)" to="(250,300)"/> <!-- Connect Player A's score value to LED -->
    <wire from="(270,400)" to="(250,400)"/> <!-- Connect Player B's score value to LED -->
    <wire from="(250,480)" to="(270,480)"/> <!-- Connect the 7-segment display value to circuit -->
  </circuit>
</project>